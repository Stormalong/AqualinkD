aq_panel.c:  aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:    aqdata->aqbuttons[index].led->state = OFF;  // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:    aqdata->aqbuttons[index].led->state = OFF; // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:    aqdata->aqbuttons[index].led->state = OFF; // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:    aqdata->aqbuttons[index].led->state = OFF; // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:      aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[index].led->state = LED_S_UNKNOWN;
aq_panel.c:        aqdata->aqbuttons[i].led->state = OFF;
aq_panel.c:  if ((button->led->state == OFF && isON == false) ||
aq_panel.c:      (isON > 0 && (button->led->state == ON || button->led->state == FLASH ||
aq_panel.c:                     button->led->state == ENABLE))) {
aq_panel.c:      if ((button->special_mask & PROGRAM_LIGHT) == PROGRAM_LIGHT && button->led->state == OFF) {
aq_panel.c:        button->led->state = ENABLE; // if heater and set to on, set pre-status to enable.
aq_panel.c:        button->led->state = (isON == false ? OFF : ON); // as long as it's not programmable light , pre-set to on/off
aq_panel.c:  if ((_aqualink_data->aqbuttons[buttonIndex].led->state == OFF && value == 0) ||
aq_panel.c:      (value > 0 && (_aqualink_data->aqbuttons[buttonIndex].led->state == ON || _aqualink_data->aqbuttons[buttonIndex].led->state == FLASH ||
aq_panel.c:                      _aqualink_data->aqbuttons[buttonIndex].led->state == ENABLE))) {
aq_panel.c:      if ((_aqualink_data->aqbuttons[buttonIndex].special_mask & PROGRAM_LIGHT) == PROGRAM_LIGHT && _aqualink_data->aqbuttons[buttonIndex].led->state == OFF) {
aq_panel.c:        _aqualink_data->aqbuttons[buttonIndex].led->state = ENABLE; // if heater and set to on, set pre-status to enable.
aq_panel.c:        _aqualink_data->aqbuttons[buttonIndex].led->state = (value == 0 ? OFF : ON); // as long as it's not programmable light , pre-set to on/off
aq_panel.c:  aqdata->aqbuttons[0].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[1].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[2].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[3].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[4].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[5].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[6].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[7].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[8].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[9].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[10].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[11].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[9].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[10].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[11].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[12].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[13].led->state = OFF;  // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:  aqdata->aqbuttons[14].led->state = OFF; // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:  aqdata->aqbuttons[15].led->state = OFF; // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:  aqdata->aqbuttons[16].led->state = OFF; // Since there is no LED in data, set to off and allow messages to turn it on
aq_panel.c:  aqdata->aqbuttons[17].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[18].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[19].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[0].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[1].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[2].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[3].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[4].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[5].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[6].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[7].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[8].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[9].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[10].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[11].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[12].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[13].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[14].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[15].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[16].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[17].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[18].led->state = LED_S_UNKNOWN;
aq_panel.c:  aqdata->aqbuttons[19].led->state = LED_S_UNKNOWN;
aq_programmer.c:  if (aq_data->aqbuttons[SPA_INDEX].led->state != OFF) {
aq_programmer.c:    if ( button->led->state == ON ) {
aq_programmer.c:  if ( button->led->state == ON ) {
aq_programmer.c:    if ( button->led->state == ON ) {
aq_programmer.c:  if ( button->led->state != ON ) {
aq_programmer.c:    LOG(PROG_LOG, LOG_DEBUG, "loop %d of %d looking for state change to '%d' for '%s' \n",i,numMessageReceived,button->led->state,button->name);
aq_programmer.c:    if (button->led->state == state) {
aq_programmer.c:    LOG(PROG_LOG, LOG_DEBUG, "did not find state '%d' for '%s'\n",button->led->state,button->name);
aq_programmer.c:  LOG(PROG_LOG, LOG_DEBUG, "found state '%d' for '%s'\n",button->led->state,button->name);
aq_timer.c:  if (!isPDA_PANEL && tmthread->button->led->state == OFF) {
aq_timer.c:  if (tmthread->button->led->state != OFF) {
aqualinkd.c:      _aqualink_data.aqbuttons[i].led->state = state;
aqualinkd.c:      LOG(AQUA_LOG,LOG_INFO, "Set %s to %d\n", _aqualink_data.aqbuttons[i].label, _aqualink_data.aqbuttons[i].led->state);
aqualinkd.c:        LOG(AQUA_LOG,LOG_ERR, "RS16 Button Set error %s to %d, %d is out of scope\n", _aqualink_data.aqbuttons[i].label, _aqualink_data.aqbuttons[i].led->state, i);
aqualinkd.c:      if ((msg_loop & MSG_SWG) != MSG_SWG && _aqualink_data.aqbuttons[PUMP_INDEX].led->state == OFF )
aqualinkd.c:        if ( _aqualink_data.aqbuttons[PUMP_INDEX].led->state == OFF) {
aqualinkd.c:        if ( _aqualink_data.aqbuttons[PUMP_INDEX].led->state == ON) {
aqualinkd.c:    if ((msg_loop & MSG_SWG) != MSG_SWG && _aqualink_data.aqbuttons[PUMP_INDEX].led->state == OFF ) {
aqualinkd.c:        _aqualink_data.aqbuttons[13].led->state = OFF;
aqualinkd.c:        _aqualink_data.aqbuttons[14].led->state = OFF;
aqualinkd.c:        _aqualink_data.aqbuttons[15].led->state = OFF;
aqualinkd.c:        _aqualink_data.aqbuttons[16].led->state = OFF;
aqualinkd.c:    if (_aqualink_data.aqbuttons[PUMP_INDEX].led->state == OFF)
aqualinkd.c:    else if (_aqualink_data.aqbuttons[SPA_INDEX].led->state == OFF && isSINGLE_DEV_PANEL != true)
aqualinkd.c:    else if (_aqualink_data.aqbuttons[SPA_INDEX].led->state == ON && isSINGLE_DEV_PANEL != true)
devices_jandy.c:      length += sprintf(msg+length, ", Pool Heat LED=%d ",aqdata->aqbuttons[i].led->state);
devices_jandy.c:      length += sprintf(msg+length, ", Spa Heat LED=%d ",aqdata->aqbuttons[i].led->state);
devices_jandy.c:      length += sprintf(msg+length, ", Pool Heat LED=%d ",aqdata->aqbuttons[i].led->state);
devices_jandy.c:      length += sprintf(msg+length, ", Spa Heat LED=%d ",aqdata->aqbuttons[i].led->state);
iaqtouch_aq_programmer.c:    if (aq_data->aqbuttons[SPA_INDEX].led->state != OFF) {
iaqtouch.c:            aq_data->aqbuttons[i].led->state = OFF;
iaqtouch.c:            aq_data->aqbuttons[i].led->state = ON;
iaqtouch.c:            aq_data->aqbuttons[i].led->state = FLASH;
iaqtouch.c:            aq_data->aqbuttons[i].led->state = ENABLE;
iaqtouch.c:      printf(" -Enabeled- ");
json_messages.c:                                     aqdata->aqbuttons[i].led->state==ON?JSON_ON:JSON_OFF,
json_messages.c:                                     LED2text(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     LED2int(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     aqdata->aqbuttons[i].led->state==ON?JSON_ON:JSON_OFF,
json_messages.c:                                     LED2text(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     LED2int(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     aqdata->aqbuttons[i].led->state==ON?JSON_ON:JSON_OFF,
json_messages.c:                                     LED2text(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     LED2int(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     aqdata->aqbuttons[i].led->state==ON?JSON_ON:JSON_OFF,
json_messages.c:                                     LED2text(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     LED2int(aqdata->aqbuttons[i].led->state));
json_messages.c:                                     aqdata->aqbuttons[i].led->state==ON?JSON_ON:JSON_OFF,
json_messages.c:                                     LED2text(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     LED2int(aqdata->aqbuttons[i].led->state));
json_messages.c:                                     aqdata->aqbuttons[i].led->state==ON?JSON_ON:JSON_OFF,
json_messages.c:                                     LED2text(aqdata->aqbuttons[i].led->state),
json_messages.c:                                     LED2int(aqdata->aqbuttons[i].led->state),
json_messages.c:    char *state = LED2text(aqdata->aqbuttons[i].led->state);
net_services.c:  send_mqtt(nc, mqtt_pub_topic, ( ((button->special_mask & TIMER_ACTIVE) == TIMER_ACTIVE) && (button->led->state != OFF) )?MQTT_ON:MQTT_OFF );
net_services.c:    if (_last_mqtt_aqualinkdata.aqualinkleds[i].state != _aqualink_data->aqbuttons[i].led->state) {
net_services.c:      _last_mqtt_aqualinkdata.aqualinkleds[i].state = _aqualink_data->aqbuttons[i].led->state;
net_services.c:        send_mqtt_heater_state_msg(nc, _aqualink_data->aqbuttons[i].name, _aqualink_data->aqbuttons[i].led->state);
net_services.c:        send_mqtt_state_msg(nc, _aqualink_data->aqbuttons[i].name, _aqualink_data->aqbuttons[i].led->state);
net_services.c:        send_domoticz_mqtt_state_msg(nc, _aqualink_data->aqbuttons[i].dz_idx, (_aqualink_data->aqbuttons[i].led->state==OFF?DZ_OFF:DZ_ON));
net_services.c:        if ( (_aqualink_data->aqbuttons[i].led->state == OFF && nvalue==DZ_OFF) ||
net_services.c:           (nvalue == DZ_ON && (_aqualink_data->aqbuttons[i].led->state == ON || 
net_services.c:                                _aqualink_data->aqbuttons[i].led->state == FLASH || 
net_services.c:                                _aqualink_data->aqbuttons[i].led->state == ENABLE))) {
onetouch_aq_programmer.c:    if (aq_data->aqbuttons[SPA_INDEX].led->state == OFF) {
onetouch.c:      if (isCOMBO_PANEL && aq_data->aqbuttons[SPA_INDEX].led->state == ON)
onetouch.c:      aq_data->aqbuttons[i].led->state = ON;
onetouch.c:        aq_data->aqbuttons[i].led->state = OFF;
pda_aq_programmer.c:    if (aq_data->aqbuttons[device].led->state != state) {
pda_aq_programmer.c:  } else if (aq_data->aqbuttons[SPA_INDEX].led->state != OFF) {
pda.c:  aqledstate old_state = led->state;
pda.c:    led->state = ON;
pda.c:    led->state = ENABLE;
pda.c:    led->state = FLASH;
pda.c:    led->state = OFF;
pda.c:  if (old_state != led->state)
pda.c:    LOG(PDA_LOG,LOG_DEBUG, "set_pda_led from %d to %d\n", old_state, led->state);
pda.c:        if (_aqualink_data->aqbuttons[i].led->state != OFF) {
pda.c:          _aqualink_data->aqbuttons[i].led->state = OFF;
pda.c:      if ((i==0) && (_aqualink_data->aqbuttons[0].led->state == OFF )) {
pda.c:      _aqualink_data->aqbuttons[PUMP_INDEX].led->state = ON;
pda.c:      _aqualink_data->aqbuttons[PUMP_INDEX].led->state = FLASH;
pda.c:      _aqualink_data->aqbuttons[PUMP_INDEX].led->state = ON;
pda.c:      _aqualink_data->aqbuttons[SPA_INDEX].led->state = ON;
pda.c:      _aqualink_data->aqbuttons[PUMP_INDEX].led->state = FLASH;
pda.c:      _aqualink_data->aqbuttons[SPA_INDEX].led->state = ON;
pda.c:      _aqualink_data->aqbuttons[SPA_INDEX].led->state = OFF;
pda.c:    _aqualink_data->aqbuttons[_aqualink_data->spa_heater_index].led->state = ENABLE;
pda.c:    _aqualink_data->aqbuttons[_aqualink_data->pool_heater_index].led->state = ENABLE;
pda.c:    if (_aqualink_data->aqbuttons[SPA_INDEX].led->state != OFF) {
pda.c:    if (_aqualink_data->aqbuttons[SPA_INDEX].led->state == OFF) {
pda.c:      _aqualink_data->aqbuttons[_aqualink_data->pool_heater_index].led->state = ENABLE;
pda.c:      _aqualink_data->aqbuttons[_aqualink_data->spa_heater_index].led->state = ENABLE;
pda.c:          if (_aqualink_data->aqbuttons[i].led->state != FLASH)
pda.c:            _aqualink_data->aqbuttons[i].led->state = ON;
serialadapter.c:    if (led->state != OFF) {
serialadapter.c:      led->state = OFF;
serialadapter.c:    if (led->state != ON) {
serialadapter.c:      led->state = ON;
serialadapter.c:  //_aqualink_data.aqbuttons[13].led->state = OFF;
serialadapter.c:        //_aqualink_data.aqbuttons[13].led->state = OFF;
